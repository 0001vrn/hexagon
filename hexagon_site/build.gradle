
// TODO Add `serve` task to start an HTTP server with `build` contents

ext.siteSource = '.'
ext.siteHost = 'http://hexagonkt.com'

ext.logoSmall = 'assets/img/logo.svg'
ext.logoWide = 'assets/img/logo_wide.svg'
ext.logoLarge = 'assets/img/logo.svg'

ext.configData = [
    bootstrapVersion : '3.3.7',
    jqueryVersion : '3.2.1',
    highlightVersion : '9.12.0',
    theme : 'flatly', // also 'paper' or 'cerulean'
    cloudflare : 'http://cdnjs.cloudflare.com/ajax/libs',
    author : 'Juanjo Aguililla',
    authorMail : 'juanjoaguililla@gmail.com',
    keywords : 'Hexagon\\, microservices\\, Kotlin\\, RabbitMQ\\, MongoDB\\, JVM\\, Web',

    twitterUser : 'hexagon_kt',
    githubRepo : 'hexagonkt/hexagon',
    slackChannel : 'https://kotlinlang.slack.com/messages/hexagon',
    bintrayRepo : 'jamming/maven/hexagon_core',

    siteColor : '#135AA1',
    siteLogoDark : '#0073BB',
    siteLogoLight : '#2B9EE6',
    siteBackgroundDark : '#31415C',
    siteBackgroundLight : '#546691',
    siteAccentColor : '#2B9EE6',

    menu : [
        'Quick Start' : '/quick_start',
        'Guides' : '/guides',
        'API' : '/dokka/hexagon_core'
    ]
]

apply plugin: 'org.ajoberstar.git-publish'
apply from: '../gradle/site.gradle'
apply from: '../gradle/icons.gradle'

gitPublishPush.dependsOn 'site'

gitPublish {
    final String grgitUser = System.getenv ('GRGIT_USER') ?: 'user'
    final String grgitPass = System.getenv ('GRGIT_PASS') ?: 'pass'

    repoUri = "https://$grgitUser:$grgitPass@github.com/hexagonkt/hexagon.git"
    branch = 'gh-pages'

    contents {
        from buildDir
    }
}

//jbake {
//    configuration['content.folder'] = 'out/content'
//}

tasks.jbake.doFirst {
    println 'TODO Copy content to out/content (adding front matter)'
}

site.dependsOn (
    rootProject.getTasksByName ('dokka', true).toArray () +
    rootProject.getTasksByName ('jacocoTestReport', true).toArray ()
)

site.doLast {
    final String projectBuildDir = project.buildDir.absolutePath
    final List<String> dirs = rootProject.subprojects.collect { "$it.name/build/dokka" }

    copy {
        dirs.each { dir -> from rootProject.file(dir) }
        into "$projectBuildDir/dokka"
    }
}
