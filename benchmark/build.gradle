
apply from: "../gradle/kotlin.gradle"
apply from: "../gradle/service.gradle"

apply plugin: 'war'

mainClassName = "co.there4.hexagon.BenchmarkKt"
applicationDefaultJvmArgs = [
    '-Xms64M', '-Xmx2G', '-XX:+UseNUMA', '-XX:+UseParallelGC', '-XX:+AggressiveOpts'
]

ext.hikariVersion = '2.6.1'
ext.postgresqlVersion = '42.0.0'

ext.tfbBuildDir = project.buildDir.absolutePath + '/tfb'
ext.databases = [ 'MongoDB', 'PostgreSQL' ]
ext.servers = [ 'Jetty' ]
ext.tests = [servers, databases].combinations ()

war {
    archiveName = "ROOT.war"
}

installDist.dependsOn 'war'

dependencies {
    compile project(':core')

    compile ("ch.qos.logback:logback-classic:$logbackVersion")
    compile ("com.mitchellbosecke:pebble:$pebbleVersion")
    compile ("org.mongodb:mongodb-driver:$mongodbVersion")
    compile ("com.zaxxer:HikariCP:$hikariVersion")
    compile ("org.postgresql:postgresql:$postgresqlVersion")

    // providedCompile excludes the dependency only in the WAR, not in the distribution
    providedCompile ("org.eclipse.jetty:jetty-webapp:$jettyVersion") { exclude module: "slf4j-api" }

    testCompile ("org.testng:testng:$testngVersion")
}

test {
    useTestNG ()
}

//noinspection GroovyAssignabilityCheck
task setupTfb(dependsOn: [ 'benchmarkCode', 'benchmarkConfig', 'setupScripts' ])

//noinspection GroovyAssignabilityCheck
task copyTfb(type: Copy) {
    from projectDir
    include 'src/**', 'tfb_build.gradle', 'readme.md'
    into tfbBuildDir
    rename 'tfb_(.+)', '$1'
}

//noinspection GroovyAssignabilityCheck
task gradleSettings(type: WriteProperties) {
    Map<String, ?> settings = [
        description : 'Hexagon web framework\'s benchmark',

        gradleScripts :
            "https://raw.githubusercontent.com/jaguililla/hexagon/$rootProject.version/gradle",

        hexagonVersion : rootProject.version,
        kotlinVersion : kotlinVersion,
        pebbleVersion : pebbleVersion,
        jettyVersion : jettyVersion,
        mongodbVersion : mongodbVersion,

        hikariVersion : hikariVersion,
        postgresqlVersion : postgresqlVersion,

        testngVersion : testngVersion
    ]

    properties settings
    outputFile = "$tfbBuildDir/gradle.properties"
}

//noinspection GroovyAssignabilityCheck
task benchmarkConfig() {
    doLast {
        Map<String, Map<String, Object>> test = [:]
        tests.forEach {
            String server = it[0]
            String database = it[1]
            test[(server + '_' + database).toLowerCase()] = [
                json_url : '/json',
                db_url : '/db',
                query_url : '/query?queries=',
                fortune_url : '/fortunes',
                update_url : '/update?queries=',
                plaintext_url : '/plaintext',

                port : 9090,

                approach : 'Realistic',
                classification : 'Micro',
                database : database,
                framework : 'Hexagon',
                language : 'Kotlin',
                orm : 'Raw',
                platform : 'Servlet',
                webserver : 'None',
                os : 'Linux',
                database_os : 'Linux',
                display_name : "Hexagon $server $database",
                notes : 'http://there4.co/hexagon',

                setup_file : "setup_${server.toLowerCase ()}_${database.toLowerCase ()}",
                versus : 'servlet'
            ]
        }

        Map<String, ?> config = [
            framework : 'hexagon',
            tests : [ test ]
        ]

        String json = groovy.json.JsonOutput.toJson(config)
        File file = file("$tfbBuildDir/benchmark_config.json")
        file.createNewFile()
        file.text = groovy.json.JsonOutput.prettyPrint(json)
    }
}

//noinspection GroovyAssignabilityCheck
task setupScripts() {
    doLast {
        tests.forEach {
            String server = ((String)it[0]).toLowerCase()
            String database = ((String)it[1]).toLowerCase()
            File file = file("$tfbBuildDir/setup_${server}_${database}.sh")
            file.createNewFile()
            file.text = """
                #!/bin/bash

                fw_depends java $database

                gradle/wrapper -x test

                nohup build/install/hexagon/bin/hexagon $database &
                #rm -rf \$RESIN_HOME/webapps/*
                #cp build/libs/ROOT.war \$RESIN_HOME/webapps
                #resinctl start
            """.stripIndent ()
        }
    }
}

//noinspection GroovyAssignabilityCheck
task benchmarkCode(dependsOn: [ 'copyTfb', 'gradleSettings' ]) {
    doLast {
        List<String> extensions = [ 'kt', 'html', 'properties', 'xml', 'yaml', 'yml', 'gradle' ]
        String sources = fileTree (dir: tfbBuildDir, includes: extensions.collect { "**/*.$it" })
            .filter { it.file }
            .collect { './hexagon' + it.path.substring (tfbBuildDir.length()) }
            .sort ()
            .join ("\n")

        File file = file("$tfbBuildDir/source_code")
        file.createNewFile()
        file.text = sources
    }
}
