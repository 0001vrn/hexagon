
buildscript {
    repositories { jcenter () }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:2.0.0'
    }
}

import org.ajoberstar.grgit.Grgit
import org.ajoberstar.grgit.Credentials

ext.githubToken = System.getenv ('GRGIT_USER') ?: 'token'
ext.grgit = Grgit.open(credentials: new Credentials(githubToken, null))

// TODO Check version was changed
task release(dependsOn: [ 'checkGitStatus', 'publish' ]) {
    doLast {
        grgit.tag.add {
            name = version
            message = "Release $version"
        }
        // TODO Push tags
    }
}

task checkGitStatus () {
    doLast {
        checkCleanRepository(grgit)
        grgit.pull (remote: 'origin', branch: 'master')
        grgit.pull (remote: 'origin', branch: 'develop')
        checkCleanRepository(grgit)
    }
}

static void checkCleanRepository(Grgit gitRepository) {
    if (!gitRepository.status ().clean)
        throw new GradleException ('Repository not clean')
}
