
apply plugin: 'kotlin'
apply plugin: 'jacoco'

defaultTasks 'build'

ext.javaVersion = findProperty ('javaVersion') ?: '8'

targetCompatibility = "1.$javaVersion"

repositories {
    jcenter ()
    mavenCentral ()
    mavenLocal ()
}

dependencies {
    compile ("org.jetbrains.kotlin:kotlin-stdlib-jdk$javaVersion:$kotlinVersion")
    compile ("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion") {
        exclude module: 'kotlin-stdlib'
    }
    compile ('org.jetbrains.kotlinx:kotlinx-coroutines-core:0.20')

    testCompile ("org.jetbrains.kotlin:kotlin-test:$kotlinVersion")
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

// Replace build variables in resource files
processResources {
    [ 'properties', 'ini', 'cfg', 'txt', 'html', 'xml', 'json', 'yaml' ].each { String ext ->
        filesMatching ("**/*.$ext") {
            filter {
                it
                    .replace ('${projectVersion}', project.version.toString())
                    .replace ('${projectName}', project.name)
                    .replace ('${projectGroup}', project.group.toString ())
                    .replace ('${projectDescription}', project.description ?: '')
            }
        }
    }
}

tasks.compileKotlin.kotlinOptions.jvmTarget = targetCompatibility
tasks.compileKotlin.kotlinOptions.apiVersion = '1.2'

tasks.compileTestKotlin.kotlinOptions.jvmTarget = tasks.compileKotlin.kotlinOptions.jvmTarget
tasks.compileTestKotlin.kotlinOptions.apiVersion = tasks.compileKotlin.kotlinOptions.apiVersion

// Clean the project taking care of logs and runtime files
clean {
    delete 'build', '.gradle', 'log', 'out'

    delete (
        fileTree(rootDir) { include '**/*.log' },
        fileTree(rootDir) { include '**/*.hprof' }
    )
}

// Show useful testing information while running tests
test {
    testLogging {
        events 'skipped', 'failed', 'standardOut', 'standardError'
    }
}

// Generate coverage reports properly
jacocoTestReport {
    dependsOn 'test'
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
