/*
 * To apply this script, you need to add the JBake plugin manually at the top of your build script
 * as that is not possible in included scripts like this one. These are the required lines to do so:
 *
 * buildscript {
 *     repositories {
 *         jcenter ()
 *         mavenCentral ()
 *         maven { url 'https://plugins.gradle.org/m2/' }
 *     }
 *
 *     dependencies {
 *         classpath "gradle.plugin.org.xbib.gradle.plugin:gradle-plugin-jbake:$jbakepluginVersion"
 *     }
 * }
 */

apply plugin: 'org.xbib.gradle.plugin.jbake'

ext.siteSource = findProperty ('siteSource') ?: 'site'
ext.siteTarget = findProperty ('siteTarget') ?: "build/$siteSource"

jbake {
    srcDirName = siteSource
    destDirName = "../$siteTarget" // It is relative to `buildDir`

    configuration['site.host'] = siteHost

    configuration['render.index'] = false
    configuration['render.tags'] = false
    configuration['render.archive'] = false
    configuration['render.feed'] = false
    configuration['render.sitemap'] = true

    // Custom properties
    configuration['projectName'] = project.name // Applied in templates, not content
    configuration['projectDescription'] = project.description
    configuration['projectVersion'] = project.version.toString()
    configuration['siteColor'] = siteColor
}

// Site processing is required because JBake does not filter content with configuration properties
task site (dependsOn: 'jbake') {
    doLast {
        file (siteTarget).traverse (nameFilter: ~/.+\.(html|xml|css)$/) {
            it.write (it.getText ()
                .replace ('${projectVersion}', project.version.toString ())
                .replace ('${siteColor}', siteColor.toString())
                .replace ('${projectGroup}', project.group.toString ())
                .replace ('${projectDescription}', project.description)
            )
        }
    }
}
